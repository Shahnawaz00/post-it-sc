{"ast":null,"code":"import _slicedToArray from \"/Users/shahnawaz/Desktop/projects/post-it/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shahnawaz/Desktop/projects/post-it/client/src/features/loginPage/Login.js\";\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginClassDispatched } from './loginSlice';\nimport { useGetUsersQuery } from '../api/apiSlice';\nimport { hideADButtonsDispatched } from '../header/hideADButtonsSlice';\nimport { hideLoginButtonsDispatched } from '../header/hideLoginButtonsSlice';\nimport { userIdStored } from './userIdSlice';\n\nvar Login = function Login() {\n  var dispatch = useDispatch();\n  var loginClass = useSelector(function (state) {\n    return state.loginClass;\n  }); // close login page\n\n  var closeLogin = function closeLogin() {\n    if (loginClass.value !== false) {\n      dispatch(loginClassDispatched(false));\n    }\n  }; // input states\n\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onEmailChange = function onEmailChange(e) {\n    return setEmail(e.target.value);\n  };\n\n  var onPasswordChange = function onPasswordChange(e) {\n    return setPassword(e.target.value);\n  }; // check user data\n\n\n  var _useGetUsersQuery = useGetUsersQuery(),\n      users = _useGetUsersQuery.data,\n      isLoading = _useGetUsersQuery.isLoading;\n\n  var canLogin = [email, password].every(Boolean) && !isLoading; // on login button click\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      validInput = _useState6[0],\n      setValidInput = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validCred = _useState8[0],\n      setValidCred = _useState8[1];\n\n  var onLogin = function onLogin() {\n    if (canLogin) {\n      //  check if inputs are empty\n      var userData = users.find(function (user) {\n        return user.email === email;\n      }); // check if email exists\n\n      if (userData) {\n        if (userData.password === password) {\n          //check if password matches email\n          // on success\n          dispatch( // store user id\n          userIdStored(userData.id));\n          dispatch( // show add delete post buttons\n          hideADButtonsDispatched(false));\n          dispatch( // hide login buttons\n          hideLoginButtonsDispatched(true));\n          dispatch( // show logout button\n          loginClassDispatched(false));\n          setEmail('');\n          setPassword('');\n          setValidInput(true);\n          setValidCred(true);\n        } else setValidCred(false);\n\n        setValidInput(true);\n      } else setValidCred(false);\n    } else setValidInput(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: loginClass.value ? 'showLogin' : 'hideLogin',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Username: *\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    name: \"email\",\n    onChange: onEmailChange,\n    value: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Password: *\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"password\",\n    name: \"password\",\n    onChange: onPasswordChange,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), !validCred && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalidPrompts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 28\n    }\n  }, \"Incorrect request\"), !validInput && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalidPrompts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Please enter email and password\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginSubmitButton\",\n    type: \"button\",\n    onClick: onLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginCloseButton\",\n    onClick: closeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Close\"));\n};\n\nexport default Login;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","loginClassDispatched","useGetUsersQuery","hideADButtonsDispatched","hideLoginButtonsDispatched","userIdStored","Login","dispatch","loginClass","state","closeLogin","value","email","setEmail","password","setPassword","onEmailChange","e","target","onPasswordChange","users","data","isLoading","canLogin","every","Boolean","validInput","setValidInput","validCred","setValidCred","onLogin","userData","find","user","id"],"sources":["/Users/shahnawaz/Desktop/projects/post-it/client/src/features/loginPage/Login.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginClassDispatched } from './loginSlice';\nimport { useGetUsersQuery } from '../api/apiSlice'\nimport { hideADButtonsDispatched } from '../header/hideADButtonsSlice';\nimport { hideLoginButtonsDispatched } from '../header/hideLoginButtonsSlice';\nimport { userIdStored } from './userIdSlice';\n\n\nconst Login = () => {\n\n  const dispatch = useDispatch()\n  const loginClass = useSelector(state => state.loginClass)\n\n  // close login page\n\n  const closeLogin = () => {\n    if (loginClass.value !== false) {\n      dispatch(\n        loginClassDispatched(false)\n      )\n    }\n  }\n\n  // input states\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onEmailChange = (e) => setEmail(e.target.value)\n  const onPasswordChange = (e) => setPassword(e.target.value)\n\n  // check user data\n  const {\n    data: users,\n    isLoading\n  } = useGetUsersQuery()\n  const canLogin = [email, password].every(Boolean) && !isLoading\n\n\n  // on login button click\n  const [validInput, setValidInput] = useState(true)\n  const [validCred, setValidCred] = useState(true)\n  const onLogin = () => {\n\n    if (canLogin) {          //  check if inputs are empty\n      const userData = users.find(user => user.email === email);        // check if email exists\n      if (userData) {\n        if (userData.password === password) {            //check if password matches email\n          // on success\n          dispatch(         // store user id\n            userIdStored(userData.id)\n          );\n          dispatch(            // show add delete post buttons\n            hideADButtonsDispatched(false)\n          );\n          dispatch(        // hide login buttons\n            hideLoginButtonsDispatched(true)\n          );\n          dispatch(         // show logout button\n            loginClassDispatched(false)\n          );\n          setEmail('');\n          setPassword('');\n          setValidInput(true);\n          setValidCred(true)\n        } else setValidCred(false); setValidInput(true)\n      } else setValidCred(false)\n    } else setValidInput(false)\n    }\n\n\n\n\n  return (\n      <div className={loginClass.value ? 'showLogin' : 'hideLogin'} >\n           <h2>Login</h2>\n        {/* form  */}\n        <form >\n          <div>\n            <label htmlFor=\"email\">Username: *</label>\n            <input required type=\"text\" name='email' onChange={onEmailChange} value={email} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password: *</label>\n            <input required type=\"password\" name='password' onChange={onPasswordChange} value={password} />\n        </div>\n            {!validCred && <p className='invalidPrompts' >Incorrect request</p>}\n            {!validInput && <p className='invalidPrompts'>Please enter email and password</p>}\n            <button className='loginSubmitButton' type='button' onClick={onLogin} >\n                Login\n            </button>\n        </form>\n        <button className='loginCloseButton' onClick={closeLogin} >\n          Close\n        </button>\n\n      </div>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}