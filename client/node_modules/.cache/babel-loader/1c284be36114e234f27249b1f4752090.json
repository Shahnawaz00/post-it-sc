{"ast":null,"code":"import _asyncToGenerator from \"/Users/shahnawaz/Desktop/projects/post-it/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/shahnawaz/Desktop/projects/post-it/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shahnawaz/Desktop/projects/post-it/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/shahnawaz/Desktop/projects/post-it/client/src/features/posts/PostsList.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deletePostDispatched } from '../posts/deletePostSlice'; // import { deletePostConfirm } from '../posts/postsSlice';\n\nimport { useGetPostsQuery, useDeletePostConfirmMutation } from '../api/apiSlice';\n\nvar PostsList = function PostsList() {\n  var dispatch = useDispatch(); // api data\n  // get posts\n\n  var _useGetPostsQuery = useGetPostsQuery(),\n      posts = _useGetPostsQuery.data,\n      isLoading = _useGetPostsQuery.isLoading,\n      isSuccess = _useGetPostsQuery.isSuccess,\n      isError = _useGetPostsQuery.isError,\n      error = _useGetPostsQuery.error; // get user posts\n\n\n  var userId = useSelector(function (state) {\n    return state.userId;\n  }); // delete posts\n\n  var _useDeletePostConfirm = useDeletePostConfirmMutation(),\n      _useDeletePostConfirm2 = _slicedToArray(_useDeletePostConfirm, 1),\n      deletePostConfirm = _useDeletePostConfirm2[0]; // delete post div\n\n\n  var deletePost = useSelector(function (state) {\n    return state.deletePost;\n  }); // checkbox checked array\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkedArray = _useState2[0],\n      setCheckedArray = _useState2[1];\n\n  var checkBoxClick = function checkBoxClick(e) {\n    if (e.target.checked === true) {\n      setCheckedArray(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [{\n          value: e.target.id\n        }]);\n      });\n    }\n\n    if (e.target.checked === false) {\n      setCheckedArray(function (prevState) {\n        return prevState.filter(function (id) {\n          return id.value !== e.target.id;\n        });\n      });\n    }\n  }; // remove posts dispatch\n\n\n  var onDeleteConfirm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(checkedArray.length > 0)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return checkedArray.map(function (postid) {\n                return deletePostConfirm({\n                  id: postid.value\n                });\n              });\n\n            case 4:\n              dispatch(deletePostDispatched(false));\n              console.log(checkedArray);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('fail', _context.t0);\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              alert('select a post');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function onDeleteConfirm() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // delete post class changes\n\n\n  var closeDeletePost = function closeDeletePost() {\n    if (deletePost.value !== false) {\n      dispatch(deletePostDispatched(false));\n    }\n  }; // show data from backend\n\n\n  var content; // if (isLoading) {                    //loading\n  //   content = <h1>...loading</h1>\n  // } else if (isSuccess) {             // render posts on success\n  //   content = posts.map(post => (\n  //     <div className={deletePost.value ? 'eachPost shake' : 'eachPost'} key={post.id}>\n  //       <h3>{post.title}</h3>\n  //       <p> {post.description} </p>\n  //       <div className={deletePost.value? 'showCheckbox' : 'hideCheckbox'} >\n  //         <label className='checkboxLabel'>\n  //           <input className='eachPostCheckbox' type=\"checkbox\" id={post.id} onClick={checkBoxClick}  />\n  //           <span className=\"newCheckbox\"></span>\n  //         </label>\n  //       </div>\n  //     </div>)\n  //   )\n  // } else if (isError) {             // on error\n  //   content = <div {...error.toString()}></div>\n  //   console.log(posts)\n  // }\n\n  if (!userId.value) {\n    var userPosts = posts.filter(function (post) {\n      return post.userId === \"62ad3b38e69875547278df2f\";\n    });\n\n    if (userPosts) {\n      content = userPosts.map(function (post) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: deletePost.value ? 'eachPost shake' : 'eachPost',\n          key: post.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, \" \", post.description, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: deletePost.value ? 'showCheckbox' : 'hideCheckbox',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"checkboxLabel\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"eachPostCheckbox\",\n          type: \"checkbox\",\n          id: post.id,\n          onClick: checkBoxClick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"newCheckbox\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }))));\n      });\n    } else content = /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 24\n      }\n    }, \"add new post\");\n  } else content = /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"loginPrompt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"log in to add posts\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: deletePost.value ? 'deleteBtnSection' : 'removeDeleteBtnSection ',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: deletePost.value ? 'deleteConfirmBtn' : 'removeDeleteConfirmBtn',\n    onClick: onDeleteConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: deletePost.value ? 'deleteCancelBtn' : 'removeDeleteCancelBtn',\n    onClick: closeDeletePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postsSection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nexport default PostsList;","map":{"version":3,"names":["React","useState","useSelector","useDispatch","deletePostDispatched","useGetPostsQuery","useDeletePostConfirmMutation","PostsList","dispatch","posts","data","isLoading","isSuccess","isError","error","userId","state","deletePostConfirm","deletePost","checkedArray","setCheckedArray","checkBoxClick","e","target","checked","prevState","value","id","filter","onDeleteConfirm","length","map","postid","console","log","alert","closeDeletePost","content","userPosts","post","title","description"],"sources":["/Users/shahnawaz/Desktop/projects/post-it/client/src/features/posts/PostsList.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deletePostDispatched } from '../posts/deletePostSlice';\n// import { deletePostConfirm } from '../posts/postsSlice';\nimport { useGetPostsQuery, useDeletePostConfirmMutation } from '../api/apiSlice'\n\nconst PostsList = () => {\n\n  const dispatch = useDispatch()\n  // api data\n\n  // get posts\n  const {\n    data: posts,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetPostsQuery()\n  // get user posts\n  const userId = useSelector(state => state.userId)\n\n  // delete posts\n  const [deletePostConfirm] = useDeletePostConfirmMutation()\n  // delete post div\n  const deletePost = useSelector(state => state.deletePost)\n\n  // checkbox checked array\n  const [checkedArray, setCheckedArray] = useState([]);\n\n  const checkBoxClick = (e) => {\n    if (e.target.checked === true) {\n      setCheckedArray(prevState => [...prevState, {value:e.target.id}])\n    } if (e.target.checked === false) {\n      setCheckedArray((prevState) =>\n      prevState.filter((id) => id.value !== e.target.id )\n      )\n    }\n  }\n  // remove posts dispatch\n  const onDeleteConfirm = async () => {\n    if (checkedArray.length > 0) {\n      // dispatch(deletePostConfirm(checkedArray))\n      try {\n        await checkedArray.map(postid => deletePostConfirm( {id: postid.value} ))\n          dispatch (\n            deletePostDispatched(false)\n          )\n        console.log(checkedArray)\n      } catch (err) {\n        console.error('fail', err)\n      }\n\n    }  else alert('select a post')\n\n  }\n  // delete post class changes\n\n  const closeDeletePost = () => {\n    if (deletePost.value !== false ) {\n        dispatch (\n            deletePostDispatched(false)\n        )\n    }\n  }\n\n\n  // show data from backend\n  let content\n\n  // if (isLoading) {                    //loading\n  //   content = <h1>...loading</h1>\n  // } else if (isSuccess) {             // render posts on success\n  //   content = posts.map(post => (\n  //     <div className={deletePost.value ? 'eachPost shake' : 'eachPost'} key={post.id}>\n  //       <h3>{post.title}</h3>\n  //       <p> {post.description} </p>\n  //       <div className={deletePost.value? 'showCheckbox' : 'hideCheckbox'} >\n  //         <label className='checkboxLabel'>\n  //           <input className='eachPostCheckbox' type=\"checkbox\" id={post.id} onClick={checkBoxClick}  />\n  //           <span className=\"newCheckbox\"></span>\n  //         </label>\n  //       </div>\n  //     </div>)\n  //   )\n  // } else if (isError) {             // on error\n  //   content = <div {...error.toString()}></div>\n  //   console.log(posts)\n  // }\n\n  if (!userId.value) {\n\n    const userPosts = posts.filter(post => post.userId === \"62ad3b38e69875547278df2f\")\n    if (userPosts) {\n      content = userPosts.map(post => (\n        <div className={deletePost.value ? 'eachPost shake' : 'eachPost'} key={post.id}>\n          <h3>{post.title}</h3>\n          <p> {post.description} </p>\n          <div className={deletePost.value? 'showCheckbox' : 'hideCheckbox'} >\n            <label className='checkboxLabel'>\n              <input className='eachPostCheckbox' type=\"checkbox\" id={post.id} onClick={checkBoxClick}  />\n              <span className=\"newCheckbox\"></span>\n            </label>\n          </div>\n        </div>)\n      )\n    } else content =   <h1>add new post</h1>\n} else content =  <h1 className='loginPrompt'>log in to add posts</h1>\n\n  return (\n    <div >\n      <div className={deletePost.value ? 'deleteBtnSection' : 'removeDeleteBtnSection '} >\n          <button className={deletePost.value?'deleteConfirmBtn': 'removeDeleteConfirmBtn'} onClick={onDeleteConfirm} >\n          Delete\n          </button>\n          <button className={deletePost.value?'deleteCancelBtn': 'removeDeleteCancelBtn'} onClick={closeDeletePost} >\n          Cancel\n          </button>\n      </div>\n\n      <div className='postsSection'>\n      {content}\n      </div>\n\n    </div>\n  )\n}\nexport default PostsList\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}